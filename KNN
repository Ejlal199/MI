Model KNN Accuracy: 0.21
Pregnancies Glucose BloodPressure SkinThickness Insulin BMI DiabetesPedigreeFunction Age Outcome
0 6 148 72 35 0 33.6 0.627 50 1
1 1 85 66 29 0 26.6 0.351 31 0
2 8 183 64 0 0 23.3 0.672 32 1
3 1 89 66 23 94 28.1 0.167 21 0
4 0 137 40 35 168 43.1 2.288 33 1
... ... ... ... ... ... ... ... ... ...
763 10 101 76 48 180 32.9 0.171 63 0
764 2 122 70 27 0 36.8 0.340 27 0
765 5 121 72 23 112 26.2 0.245 30 0
766 1 126 60 0 0 30.1 0.349 47 1
767 1 93 70 31 0 30.4 0.315 23 0
768 rows × 9 columns
In [31]:
import pandas as panda
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import accuracy_score
In [32]:
mydiabetesData = panda.read_csv("diabetes.csv")
mydiabetesData
Out[32]: In [33]:
Xdata = mydiabetesData. drop("Pregnancies", axis=1)
Ydata = mydiabetesData["Pregnancies"]
In [34]:
XtrainDataa, XtestData, ytrainData, ytestData = train_test_split(Xdata, Ydata, test_size=
In [35]:
standSca = StandardScaler()
X_train = standSca.fit_transform(X_train)
X_test = standSca.transform(X_test)
In [36]:
from sklearn.neighbors import KNeighborsClassifier
knnAlgoritm = KNeighborsClassifier (n_neighbors=3)
knnAlgoritm.fit(XtrainDataa, ytrainData)
Out[36]: In [42]:
y_pred = knn.predict (X_test)
KNNacc = accuracy_score(y_test, y_pred)
print(f"Model KNN Accuracy: {KNNacc: .2f}")
In [ ]:
▾ KNeighborsClassifier
KNeighborsClassifier(n_neighbors=3)
